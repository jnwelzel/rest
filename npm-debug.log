0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs',
1 verbose cli   '/usr/bin/npm',
1 verbose cli   'install',
1 verbose cli   'hiredis',
1 verbose cli   'redis' ]
2 info using npm@1.2.18
3 info using node@v0.10.15
4 verbose read json /home/jwelzel/dev/java/rest/package.json
5 verbose read json /home/jwelzel/dev/java/rest/node_modules/redis/package.json
6 verbose read json /home/jwelzel/dev/java/rest/package.json
7 verbose cache add [ 'hiredis', null ]
8 verbose cache add name=undefined spec="hiredis" args=["hiredis",null]
9 verbose parsed url { protocol: null,
9 verbose parsed url   slashes: null,
9 verbose parsed url   auth: null,
9 verbose parsed url   host: null,
9 verbose parsed url   port: null,
9 verbose parsed url   hostname: null,
9 verbose parsed url   hash: null,
9 verbose parsed url   search: null,
9 verbose parsed url   query: null,
9 verbose parsed url   pathname: 'hiredis',
9 verbose parsed url   path: 'hiredis',
9 verbose parsed url   href: 'hiredis' }
10 verbose cache add [ 'redis', null ]
11 verbose cache add name=undefined spec="redis" args=["redis",null]
12 verbose parsed url { protocol: null,
12 verbose parsed url   slashes: null,
12 verbose parsed url   auth: null,
12 verbose parsed url   host: null,
12 verbose parsed url   port: null,
12 verbose parsed url   hostname: null,
12 verbose parsed url   hash: null,
12 verbose parsed url   search: null,
12 verbose parsed url   query: null,
12 verbose parsed url   pathname: 'redis',
12 verbose parsed url   path: 'redis',
12 verbose parsed url   href: 'redis' }
13 silly lockFile 66e3de35-hiredis hiredis
14 verbose lock hiredis /home/jwelzel/.npm/66e3de35-hiredis.lock
15 silly lockFile b840fc02-redis redis
16 verbose lock redis /home/jwelzel/.npm/b840fc02-redis.lock
17 silly lockFile 66e3de35-hiredis hiredis
18 silly lockFile 66e3de35-hiredis hiredis
19 silly lockFile b840fc02-redis redis
20 silly lockFile b840fc02-redis redis
21 verbose addNamed [ 'hiredis', '' ]
22 verbose addNamed [ null, '*' ]
23 silly lockFile dc014615-hiredis hiredis@
24 verbose lock hiredis@ /home/jwelzel/.npm/dc014615-hiredis.lock
25 verbose addNamed [ 'redis', '' ]
26 verbose addNamed [ null, '*' ]
27 silly lockFile fb3bbc27-redis redis@
28 verbose lock redis@ /home/jwelzel/.npm/fb3bbc27-redis.lock
29 silly addNameRange { name: 'hiredis', range: '*', hasData: false }
30 silly addNameRange { name: 'redis', range: '*', hasData: false }
31 verbose url raw hiredis
32 verbose url resolving [ 'http://registry.npmjs.org/', './hiredis' ]
33 verbose url resolved http://registry.npmjs.org/hiredis
34 info trying registry request attempt 1 at 12:39:40
35 http GET http://registry.npmjs.org/hiredis
36 verbose url raw redis
37 verbose url resolving [ 'http://registry.npmjs.org/', './redis' ]
38 verbose url resolved http://registry.npmjs.org/redis
39 info trying registry request attempt 1 at 12:39:40
40 verbose etag "AADQKRA55SG834B1CICIOI9RU"
41 http GET http://registry.npmjs.org/redis
42 http 200 http://registry.npmjs.org/hiredis
43 silly registry.get cb [ 200,
43 silly registry.get   { via: '1.1 varnish, 1.1 JUNO',
43 silly registry.get     connection: 'Keep-Alive',
43 silly registry.get     'proxy-connection': 'Keep-Alive',
43 silly registry.get     'content-length': '15837',
43 silly registry.get     age: '191',
43 silly registry.get     date: 'Wed, 26 Mar 2014 15:41:22 GMT',
43 silly registry.get     'content-type': 'application/json',
43 silly registry.get     etag: '"ED66KSJNC0PZDBLLUZGMLU5HZ"',
43 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
43 silly registry.get     'accept-ranges': 'bytes',
43 silly registry.get     'cache-control': 'max-age=1',
43 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1021-JFK',
43 silly registry.get     'x-cache': 'HIT, MISS',
43 silly registry.get     'x-cache-hits': '1, 0',
43 silly registry.get     'x-timer': 'S1395848291.028403997,VS0,VS-308,VE-262,VE191190',
43 silly registry.get     vary: 'Accept' } ]
44 silly addNameRange number 2 { name: 'hiredis', range: '*', hasData: true }
45 silly addNameRange versions [ 'hiredis',
45 silly addNameRange   [ '0.1.0',
45 silly addNameRange     '0.1.1',
45 silly addNameRange     '0.1.2',
45 silly addNameRange     '0.1.3',
45 silly addNameRange     '0.1.4',
45 silly addNameRange     '0.1.5',
45 silly addNameRange     '0.1.6',
45 silly addNameRange     '0.1.8',
45 silly addNameRange     '0.1.9',
45 silly addNameRange     '0.1.10',
45 silly addNameRange     '0.1.12',
45 silly addNameRange     '0.1.13',
45 silly addNameRange     '0.1.14',
45 silly addNameRange     '0.1.15',
45 silly addNameRange     '0.1.16' ] ]
46 verbose addNamed [ 'hiredis', '0.1.16' ]
47 verbose addNamed [ '0.1.16', '0.1.16' ]
48 silly lockFile beed5615-hiredis-0-1-16 hiredis@0.1.16
49 verbose lock hiredis@0.1.16 /home/jwelzel/.npm/beed5615-hiredis-0-1-16.lock
50 silly lockFile 63bd6c00-s-org-hiredis-hiredis-0-1-16-tgz http://registry.npmjs.org/hiredis/-/hiredis-0.1.16.tgz
51 verbose lock http://registry.npmjs.org/hiredis/-/hiredis-0.1.16.tgz /home/jwelzel/.npm/63bd6c00-s-org-hiredis-hiredis-0-1-16-tgz.lock
52 verbose addRemoteTarball [ 'http://registry.npmjs.org/hiredis/-/hiredis-0.1.16.tgz',
52 verbose addRemoteTarball   'f6cee1add2589b8b71cef3c4d3936a9fcd638640' ]
53 info retry fetch attempt 1 at 12:39:40
54 verbose fetch to= /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/tmp.tgz
55 http GET http://registry.npmjs.org/hiredis/-/hiredis-0.1.16.tgz
56 http 200 http://registry.npmjs.org/hiredis/-/hiredis-0.1.16.tgz
57 http 200 http://registry.npmjs.org/redis
58 silly registry.get cb [ 200,
58 silly registry.get   { via: '1.1 varnish, 1.1 JUNO',
58 silly registry.get     connection: 'Keep-Alive',
58 silly registry.get     'proxy-connection': 'Keep-Alive',
58 silly registry.get     'content-length': '83523',
58 silly registry.get     age: '15',
58 silly registry.get     date: 'Wed, 26 Mar 2014 15:41:22 GMT',
58 silly registry.get     'content-type': 'application/json',
58 silly registry.get     etag: '"AADQKRA55SG834B1CICIOI9RU"',
58 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
58 silly registry.get     'accept-ranges': 'bytes',
58 silly registry.get     'cache-control': 'max-age=1',
58 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1021-JFK',
58 silly registry.get     'x-cache': 'HIT, HIT',
58 silly registry.get     'x-cache-hits': '1, 1',
58 silly registry.get     'x-timer': 'S1395478051.210461378,VS0,VS-129,VE-34,VE370430962',
58 silly registry.get     vary: 'Accept' } ]
59 silly addNameRange number 2 { name: 'redis', range: '*', hasData: true }
60 silly addNameRange versions [ 'redis',
60 silly addNameRange   [ '0.0.1',
60 silly addNameRange     '0.0.2',
60 silly addNameRange     '0.0.3',
60 silly addNameRange     '0.0.4',
60 silly addNameRange     '0.0.7',
60 silly addNameRange     '0.0.8',
60 silly addNameRange     '0.1.0',
60 silly addNameRange     '0.1.1',
60 silly addNameRange     '0.1.2',
60 silly addNameRange     '0.2.0',
60 silly addNameRange     '0.2.1',
60 silly addNameRange     '0.2.2',
60 silly addNameRange     '0.2.3',
60 silly addNameRange     '0.2.4',
60 silly addNameRange     '0.2.6',
60 silly addNameRange     '0.3.0',
60 silly addNameRange     '0.3.1',
60 silly addNameRange     '0.3.2',
60 silly addNameRange     '0.3.3',
60 silly addNameRange     '0.3.4',
60 silly addNameRange     '0.3.5',
60 silly addNameRange     '0.3.6',
60 silly addNameRange     '0.3.7',
60 silly addNameRange     '0.3.9',
60 silly addNameRange     '0.4.0',
60 silly addNameRange     '0.4.1',
60 silly addNameRange     '0.4.2',
60 silly addNameRange     '0.5.0',
60 silly addNameRange     '0.5.1',
60 silly addNameRange     '0.5.2',
60 silly addNameRange     '0.5.3',
60 silly addNameRange     '0.5.4',
60 silly addNameRange     '0.5.5',
60 silly addNameRange     '0.5.6',
60 silly addNameRange     '0.5.7',
60 silly addNameRange     '0.5.8',
60 silly addNameRange     '0.5.9',
60 silly addNameRange     '0.5.10',
60 silly addNameRange     '0.5.11',
60 silly addNameRange     '0.6.0',
60 silly addNameRange     '0.6.1',
60 silly addNameRange     '0.6.2',
60 silly addNameRange     '0.6.3',
60 silly addNameRange     '0.6.4',
60 silly addNameRange     '0.6.5',
60 silly addNameRange     '0.6.6',
60 silly addNameRange     '0.6.7',
60 silly addNameRange     '0.7.0',
60 silly addNameRange     '0.7.1',
60 silly addNameRange     '0.7.2',
60 silly addNameRange     '0.7.3',
60 silly addNameRange     '0.8.0',
60 silly addNameRange     '0.8.1',
60 silly addNameRange     '0.8.2',
60 silly addNameRange     '0.8.3',
60 silly addNameRange     '0.8.4',
60 silly addNameRange     '0.8.5',
60 silly addNameRange     '0.8.6',
60 silly addNameRange     '0.9.0',
60 silly addNameRange     '0.9.1',
60 silly addNameRange     '0.9.2',
60 silly addNameRange     '0.10.0',
60 silly addNameRange     '0.10.1' ] ]
61 verbose addNamed [ 'redis', '0.10.1' ]
62 verbose addNamed [ '0.10.1', '0.10.1' ]
63 silly lockFile 6b5fbc25-redis-0-10-1 redis@0.10.1
64 verbose lock redis@0.10.1 /home/jwelzel/.npm/6b5fbc25-redis-0-10-1.lock
65 verbose read json /home/jwelzel/.npm/redis/0.10.1/package/package.json
66 silly lockFile 6b5fbc25-redis-0-10-1 redis@0.10.1
67 silly lockFile 6b5fbc25-redis-0-10-1 redis@0.10.1
68 silly lockFile fb3bbc27-redis redis@
69 silly lockFile fb3bbc27-redis redis@
70 silly shasum updated bytes 48419
71 info shasum f6cee1add2589b8b71cef3c4d3936a9fcd638640
71 info shasum /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/tmp.tgz
72 verbose tar unpack /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/tmp.tgz
73 silly lockFile ec659cce-380680-0-944986967369914-package /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package
74 verbose lock /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package /home/jwelzel/.npm/ec659cce-380680-0-944986967369914-package.lock
75 silly lockFile b851fbfe-380680-0-944986967369914-tmp-tgz /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/tmp.tgz
76 verbose lock /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/tmp.tgz /home/jwelzel/.npm/b851fbfe-380680-0-944986967369914-tmp-tgz.lock
77 silly gunzTarPerm modes [ '755', '644' ]
78 silly gunzTarPerm extractEntry package.json
79 silly gunzTarPerm extractEntry README.md
80 silly gunzTarPerm extractEntry hiredis.js
81 silly gunzTarPerm extractEntry bench.js
82 silly gunzTarPerm extractEntry deps/hiredis/README.md
83 silly gunzTarPerm extractEntry deps/hiredis/example.c
84 silly gunzTarPerm extractEntry deps/hiredis/async.c
85 silly gunzTarPerm extractEntry deps/hiredis/fmacros.h
86 silly gunzTarPerm extractEntry deps/hiredis/hiredis.c
87 silly gunzTarPerm extractEntry deps/hiredis/sds.h
88 silly gunzTarPerm extractEntry deps/hiredis/test.c
89 silly gunzTarPerm extractEntry deps/hiredis/CHANGELOG.md
90 silly gunzTarPerm extractEntry deps/hiredis/dict.c
91 silly gunzTarPerm extractEntry deps/hiredis/example-libev.c
92 silly gunzTarPerm extractEntry deps/hiredis/example-ae.c
93 silly gunzTarPerm extractEntry deps/hiredis/net.c
94 silly gunzTarPerm extractEntry deps/hiredis/dict.h
95 silly gunzTarPerm extractEntry deps/hiredis/Makefile
96 silly gunzTarPerm extractEntry deps/hiredis/async.h
97 silly gunzTarPerm extractEntry deps/hiredis/COPYING
98 silly gunzTarPerm extractEntry deps/hiredis/adapters/ae.h
99 silly gunzTarPerm extractEntry deps/hiredis/adapters/libevent.h
100 silly gunzTarPerm extractEntry deps/hiredis/adapters/libev.h
101 silly gunzTarPerm extractEntry deps/hiredis/net.h
102 silly gunzTarPerm extractEntry deps/hiredis/hiredis.h
103 silly gunzTarPerm extractEntry deps/hiredis/example-libevent.c
104 silly gunzTarPerm extractEntry deps/hiredis/sds.c
105 silly gunzTarPerm extractEntry deps/hiredis.gyp
106 silly gunzTarPerm extractEntry test/reader.js
107 silly gunzTarPerm extractEntry COPYING
108 silly gunzTarPerm extractEntry binding.gyp
109 silly gunzTarPerm extractEntry src/reader.cc
110 silly gunzTarPerm extractEntry src/hiredis.cc
111 silly gunzTarPerm extractEntry src/reader.h
112 verbose read json /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package/package.json
113 silly lockFile ec659cce-380680-0-944986967369914-package /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package
114 silly lockFile ec659cce-380680-0-944986967369914-package /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package
115 silly lockFile b851fbfe-380680-0-944986967369914-tmp-tgz /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/tmp.tgz
116 silly lockFile b851fbfe-380680-0-944986967369914-tmp-tgz /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/tmp.tgz
117 verbose from cache /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package/package.json
118 verbose tar pack [ '/home/jwelzel/.npm/hiredis/0.1.16/package.tgz',
118 verbose tar pack   '/home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package' ]
119 verbose tarball /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
120 verbose folder /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package
121 silly lockFile ec659cce-380680-0-944986967369914-package /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package
122 verbose lock /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package /home/jwelzel/.npm/ec659cce-380680-0-944986967369914-package.lock
123 silly lockFile 3d548578-l-npm-hiredis-0-1-16-package-tgz /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
124 verbose lock /home/jwelzel/.npm/hiredis/0.1.16/package.tgz /home/jwelzel/.npm/3d548578-l-npm-hiredis-0-1-16-package-tgz.lock
125 silly lockFile ec659cce-380680-0-944986967369914-package /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package
126 silly lockFile ec659cce-380680-0-944986967369914-package /home/jwelzel/tmp/npm-31350/1395848380680-0.944986967369914/package
127 silly lockFile 3d548578-l-npm-hiredis-0-1-16-package-tgz /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
128 silly lockFile 3d548578-l-npm-hiredis-0-1-16-package-tgz /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
129 silly lockFile 0ef25dd4-elzel-npm-hiredis-0-1-16-package /home/jwelzel/.npm/hiredis/0.1.16/package
130 verbose lock /home/jwelzel/.npm/hiredis/0.1.16/package /home/jwelzel/.npm/0ef25dd4-elzel-npm-hiredis-0-1-16-package.lock
131 silly lockFile 0ef25dd4-elzel-npm-hiredis-0-1-16-package /home/jwelzel/.npm/hiredis/0.1.16/package
132 silly lockFile 0ef25dd4-elzel-npm-hiredis-0-1-16-package /home/jwelzel/.npm/hiredis/0.1.16/package
133 verbose tar unpack /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
134 silly lockFile 0ef25dd4-elzel-npm-hiredis-0-1-16-package /home/jwelzel/.npm/hiredis/0.1.16/package
135 verbose lock /home/jwelzel/.npm/hiredis/0.1.16/package /home/jwelzel/.npm/0ef25dd4-elzel-npm-hiredis-0-1-16-package.lock
136 silly lockFile 3d548578-l-npm-hiredis-0-1-16-package-tgz /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
137 verbose lock /home/jwelzel/.npm/hiredis/0.1.16/package.tgz /home/jwelzel/.npm/3d548578-l-npm-hiredis-0-1-16-package-tgz.lock
138 silly gunzTarPerm modes [ '755', '644' ]
139 silly gunzTarPerm extractEntry package.json
140 silly gunzTarPerm extractEntry README.md
141 silly gunzTarPerm extractEntry bench.js
142 silly gunzTarPerm extractEntry hiredis.js
143 silly gunzTarPerm extractEntry COPYING
144 silly gunzTarPerm extractEntry binding.gyp
145 silly gunzTarPerm extractEntry deps/hiredis/README.md
146 silly gunzTarPerm extractEntry deps/hiredis/example-libev.c
147 silly gunzTarPerm extractEntry deps/hiredis/Makefile
148 silly gunzTarPerm extractEntry deps/hiredis/CHANGELOG.md
149 silly gunzTarPerm extractEntry deps/hiredis/adapters/ae.h
150 silly gunzTarPerm extractEntry deps/hiredis/adapters/libev.h
151 silly gunzTarPerm extractEntry deps/hiredis/adapters/libevent.h
152 silly gunzTarPerm extractEntry deps/hiredis/async.c
153 silly gunzTarPerm extractEntry deps/hiredis/async.h
154 silly gunzTarPerm extractEntry deps/hiredis/dict.c
155 silly gunzTarPerm extractEntry deps/hiredis/dict.h
156 silly gunzTarPerm extractEntry deps/hiredis/example-ae.c
157 silly gunzTarPerm extractEntry deps/hiredis/COPYING
158 silly gunzTarPerm extractEntry deps/hiredis/example-libevent.c
159 silly gunzTarPerm extractEntry deps/hiredis/example.c
160 silly gunzTarPerm extractEntry deps/hiredis/fmacros.h
161 silly gunzTarPerm extractEntry deps/hiredis/hiredis.c
162 silly gunzTarPerm extractEntry deps/hiredis/hiredis.h
163 silly gunzTarPerm extractEntry deps/hiredis/net.c
164 silly gunzTarPerm extractEntry deps/hiredis/net.h
165 silly gunzTarPerm extractEntry deps/hiredis/sds.c
166 silly gunzTarPerm extractEntry deps/hiredis/sds.h
167 silly gunzTarPerm extractEntry deps/hiredis/test.c
168 silly gunzTarPerm extractEntry deps/hiredis.gyp
169 silly gunzTarPerm extractEntry src/hiredis.cc
170 silly gunzTarPerm extractEntry src/reader.cc
171 silly gunzTarPerm extractEntry src/reader.h
172 silly gunzTarPerm extractEntry test/reader.js
173 verbose read json /home/jwelzel/.npm/hiredis/0.1.16/package/package.json
174 silly lockFile 0ef25dd4-elzel-npm-hiredis-0-1-16-package /home/jwelzel/.npm/hiredis/0.1.16/package
175 silly lockFile 0ef25dd4-elzel-npm-hiredis-0-1-16-package /home/jwelzel/.npm/hiredis/0.1.16/package
176 silly lockFile 3d548578-l-npm-hiredis-0-1-16-package-tgz /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
177 silly lockFile 3d548578-l-npm-hiredis-0-1-16-package-tgz /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
178 silly shasum updated bytes 48575
179 info shasum fdee33df7edb3c64a497065830e0aa021f1f742e
179 info shasum /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
180 verbose from cache /home/jwelzel/.npm/hiredis/0.1.16/package/package.json
181 verbose chmod /home/jwelzel/.npm/hiredis/0.1.16/package.tgz 644
182 verbose chown /home/jwelzel/.npm/hiredis/0.1.16/package.tgz [ 0, 0 ]
183 silly lockFile 63bd6c00-s-org-hiredis-hiredis-0-1-16-tgz http://registry.npmjs.org/hiredis/-/hiredis-0.1.16.tgz
184 silly lockFile 63bd6c00-s-org-hiredis-hiredis-0-1-16-tgz http://registry.npmjs.org/hiredis/-/hiredis-0.1.16.tgz
185 silly lockFile beed5615-hiredis-0-1-16 hiredis@0.1.16
186 silly lockFile beed5615-hiredis-0-1-16 hiredis@0.1.16
187 silly lockFile dc014615-hiredis hiredis@
188 silly lockFile dc014615-hiredis hiredis@
189 silly resolved [ { name: 'redis',
189 silly resolved     version: '0.10.1',
189 silly resolved     description: 'Redis client library',
189 silly resolved     keywords: [ 'redis', 'database' ],
189 silly resolved     author: { name: 'Matt Ranney', email: 'mjr@ranney.com' },
189 silly resolved     main: './index.js',
189 silly resolved     scripts: { test: 'node ./test.js' },
189 silly resolved     devDependencies: { metrics: '>=0.1.5', colors: '~0.6.0-1', underscore: '~1.4.4' },
189 silly resolved     repository: { type: 'git', url: 'git://github.com/mranney/node_redis.git' },
189 silly resolved     readme: 'redis - a node.js redis client\n===========================\n\nThis is a complete Redis client for node.js.  It supports all Redis commands, including many recently added commands like EVAL from\nexperimental Redis server branches.\n\n\nInstall with:\n\n    npm install redis\n\nPieter Noordhuis has provided a binding to the official `hiredis` C library, which is non-blocking and fast.  To use `hiredis`, do:\n\n    npm install hiredis redis\n\nIf `hiredis` is installed, `node_redis` will use it by default.  Otherwise, a pure JavaScript parser will be used.\n\nIf you use `hiredis`, be sure to rebuild it whenever you upgrade your version of node.  There are mysterious failures that can\nhappen between node and native code modules after a node upgrade.\n\n\n## Usage\n\nSimple example, included as `examples/simple.js`:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    // if you\'d like to select database 3, instead of 0 (default), call\n    // client.select(3, function() { /* ... */ });\n\n    client.on("error", function (err) {\n        console.log("Error " + err);\n    });\n\n    client.set("string key", "string val", redis.print);\n    client.hset("hash key", "hashtest 1", "some value", redis.print);\n    client.hset(["hash key", "hashtest 2", "some other value"], redis.print);\n    client.hkeys("hash key", function (err, replies) {\n        console.log(replies.length + " replies:");\n        replies.forEach(function (reply, i) {\n            console.log("    " + i + ": " + reply);\n        });\n        client.quit();\n    });\n```\n\nThis will display:\n\n    mjr:~/work/node_redis (master)$ node example.js\n    Reply: OK\n    Reply: 0\n    Reply: 0\n    2 replies:\n        0: hashtest 1\n        1: hashtest 2\n    mjr:~/work/node_redis (master)$\n\n\n## Performance\n\nHere are typical results of `multi_bench.js` which is similar to `redis-benchmark` from the Redis distribution.\nIt uses 50 concurrent connections with no pipelining.\n\nJavaScript parser:\n\n    PING: 20000 ops 42283.30 ops/sec 0/5/1.182\n    SET: 20000 ops 32948.93 ops/sec 1/7/1.515\n    GET: 20000 ops 28694.40 ops/sec 0/9/1.740\n    INCR: 20000 ops 39370.08 ops/sec 0/8/1.269\n    LPUSH: 20000 ops 36429.87 ops/sec 0/8/1.370\n    LRANGE (10 elements): 20000 ops 9891.20 ops/sec 1/9/5.048\n    LRANGE (100 elements): 20000 ops 1384.56 ops/sec 10/91/36.072\n\nhiredis parser:\n\n    PING: 20000 ops 46189.38 ops/sec 1/4/1.082\n    SET: 20000 ops 41237.11 ops/sec 0/6/1.210\n    GET: 20000 ops 39682.54 ops/sec 1/7/1.257\n    INCR: 20000 ops 40080.16 ops/sec 0/8/1.242\n    LPUSH: 20000 ops 41152.26 ops/sec 0/3/1.212\n    LRANGE (10 elements): 20000 ops 36563.07 ops/sec 1/8/1.363\n    LRANGE (100 elements): 20000 ops 21834.06 ops/sec 0/9/2.287\n\nThe performance of `node_redis` improves dramatically with pipelining, which happens automatically in most normal programs.\n\n\n### Sending Commands\n\nEach Redis command is exposed as a function on the `client` object.\nAll functions take either an `args` Array plus optional `callback` Function or\na variable number of individual arguments followed by an optional callback.\nHere is an example of passing an array of arguments and a callback:\n\n    client.mset(["test keys 1", "test val 1", "test keys 2", "test val 2"], function (err, res) {});\n\nHere is that same call in the second style:\n\n    client.mset("test keys 1", "test val 1", "test keys 2", "test val 2", function (err, res) {});\n\nNote that in either form the `callback` is optional:\n\n    client.set("some key", "some val");\n    client.set(["some other key", "some val"]);\n\nIf the key is missing, reply will be null (probably):\n\n    client.get("missingkey", function(err, reply) {\n        // reply is null when the key is missing\n        console.log(reply);\n    });\n\nFor a list of Redis commands, see [Redis Command Reference](http://redis.io/commands)\n\nThe commands can be specified in uppercase or lowercase for convenience.  `client.get()` is the same as `client.GET()`.\n\nMinimal parsing is done on the replies.  Commands that return a single line reply return JavaScript Strings,\ninteger replies return JavaScript Numbers, "bulk" replies return node Buffers, and "multi bulk" replies return a\nJavaScript Array of node Buffers.  `HGETALL` returns an Object with Buffers keyed by the hash keys.\n\n# API\n\n## Connection Events\n\n`client` will emit some events about the state of the connection to the Redis server.\n\n### "ready"\n\n`client` will emit `ready` a connection is established to the Redis server and the server reports\nthat it is ready to receive commands.  Commands issued before the `ready` event are queued,\nthen replayed just before this event is emitted.\n\n### "connect"\n\n`client` will emit `connect` at the same time as it emits `ready` unless `client.options.no_ready_check`\nis set.  If this options is set, `connect` will be emitted when the stream is connected, and then\nyou are free to try to send commands.\n\n### "error"\n\n`client` will emit `error` when encountering an error connecting to the Redis server.\n\nNote that "error" is a special event type in node.  If there are no listeners for an\n"error" event, node will exit.  This is usually what you want, but it can lead to some\ncryptic error messages like this:\n\n    mjr:~/work/node_redis (master)$ node example.js\n\n    node.js:50\n        throw e;\n        ^\n    Error: ECONNREFUSED, Connection refused\n        at IOWatcher.callback (net:870:22)\n        at node.js:607:9\n\nNot very useful in diagnosing the problem, but if your program isn\'t ready to handle this,\nit is probably the right thing to just exit.\n\n`client` will also emit `error` if an exception is thrown inside of `node_redis` for whatever reason.\nIt would be nice to distinguish these two cases.\n\n### "end"\n\n`client` will emit `end` when an established Redis server connection has closed.\n\n### "drain"\n\n`client` will emit `drain` when the TCP connection to the Redis server has been buffering, but is now\nwritable.  This event can be used to stream commands in to Redis and adapt to backpressure.  Right now,\nyou need to check `client.command_queue.length` to decide when to reduce your send rate.  Then you can\nresume sending when you get `drain`.\n\n### "idle"\n\n`client` will emit `idle` when there are no outstanding commands that are awaiting a response.\n\n## redis.createClient(port, host, options)\n\nCreate a new client connection.  `port` defaults to `6379` and `host` defaults\nto `127.0.0.1`.  If you have `redis-server` running on the same computer as node, then the defaults for\nport and host are probably fine.  `options` in an object with the following possible properties:\n\n* `parser`: which Redis protocol reply parser to use.  Defaults to `hiredis` if that module is installed.\nThis may also be set to `javascript`.\n* `return_buffers`: defaults to `false`.  If set to `true`, then all replies will be sent to callbacks as node Buffer\nobjects instead of JavaScript Strings.\n* `detect_buffers`: default to `false`. If set to `true`, then replies will be sent to callbacks as node Buffer objects\nif any of the input arguments to the original command were Buffer objects.\nThis option lets you switch between Buffers and Strings on a per-command basis, whereas `return_buffers` applies to\nevery command on a client.\n* `socket_nodelay`: defaults to `true`. Whether to call setNoDelay() on the TCP stream, which disables the\nNagle algorithm on the underlying socket.  Setting this option to `false` can result in additional throughput at the\ncost of more latency.  Most applications will want this set to `true`.\n* `no_ready_check`: defaults to `false`. When a connection is established to the Redis server, the server might still\nbe loading the database from disk.  While loading, the server not respond to any commands.  To work around this,\n`node_redis` has a "ready check" which sends the `INFO` command to the server.  The response from the `INFO` command\nindicates whether the server is ready for more commands.  When ready, `node_redis` emits a `ready` event.\nSetting `no_ready_check` to `true` will inhibit this check.\n* `enable_offline_queue`: defaults to `true`. By default, if there is no active\nconnection to the redis server, commands are added to a queue and are executed\nonce the connection has been established. Setting `enable_offline_queue` to\n`false` will disable this feature and the callback will be execute immediately\nwith an error, or an error will be thrown if no callback is specified.\n* `retry_max_delay`: defaults to `null`. By default every time the client tries to connect and fails time before\nreconnection (delay) almost doubles. This delay normally grows infinitely, but setting `retry_max_delay` limits delay\nto maximum value, provided in milliseconds.\n* `connect_timeout` defaults to `false`. By default client will try reconnecting until connected. Setting `connect_timeout`\nlimits total time for client to reconnect. Value is provided in milliseconds and is counted once the disconnect occured.\n* `max_attempts` defaults to `null`. By default client will try reconnecting until connected. Setting `max_attempts`\nlimits total amount of reconnects.\n* `auth_pass` defaults to `null`. By default client will try connecting without auth. If set, client will run redis auth command on connect.\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient(null, null, {detect_buffers: true});\n\n    client.set("foo_rand000000000000", "OK");\n\n    // This will return a JavaScript String\n    client.get("foo_rand000000000000", function (err, reply) {\n        console.log(reply.toString()); // Will print `OK`\n    });\n\n    // This will return a Buffer since original key is specified as a Buffer\n    client.get(new Buffer("foo_rand000000000000"), function (err, reply) {\n        console.log(reply.toString()); // Will print `<Buffer 4f 4b>`\n    });\n    client.end();\n```\n\n`createClient()` returns a `RedisClient` object that is named `client` in all of the examples here.\n\n### Unix Domain Socket\n\nYou can also create a connection to Redis server via the unix domain socket if the server\nhas it enabled:\n\n```js\nvar redis = require("redis");\nvar client = redis.createClient("/tmp/redis.sock");\n```\n\nSample `redis.conf` configuration to enable unix domain socket listening:\n\n```conf\nunixsocket /tmp/redis.sock\nunixsocketperm 755\n```\n\nSee [issue #204](https://github.com/mranney/node_redis/issues/204) for more information.\n\n## client.auth(password, callback)\n\nWhen connecting to Redis servers that require authentication, the `AUTH` command must be sent as the\nfirst command after connecting.  This can be tricky to coordinate with reconnections, the ready check,\netc.  To make this easier, `client.auth()` stashes `password` and will send it after each connection,\nincluding reconnections.  `callback` is invoked only once, after the response to the very first\n`AUTH` command sent.\nNOTE: Your call to `client.auth()` should not be inside the ready handler. If\nyou are doing this wrong, `client` will emit an error that looks\nsomething like this `Error: Ready check failed: ERR operation not permitted`.\n\n## client.end()\n\nForcibly close the connection to the Redis server.  Note that this does not wait until all replies have been parsed.\nIf you want to exit cleanly, call `client.quit()` to send the `QUIT` command after you have handled all replies.\n\nThis example closes the connection to the Redis server before the replies have been read.  You probably don\'t\nwant to do this:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    client.set("foo_rand000000000000", "some fantastic value");\n    client.get("foo_rand000000000000", function (err, reply) {\n        console.log(reply.toString());\n    });\n    client.end();\n```\n\n`client.end()` is useful for timeout cases where something is stuck or taking too long and you want\nto start over.\n\n## client.unref()\n\nCall `unref()` on the underlying socket connection to the Redis server, allowing the program to exit once no more commands are pending.\n\nThis is an **experimental** feature, and only supports a subset of the Redis protocol. Any commands where client state is saved on the Redis server, e.g. `*SUBSCRIBE` or the blocking `BL*` commands will *NOT* work with `.unref()`.\n\n```js\nvar redis = require("redis")\nvar client = redis.createClient()\n\n/*\n    Calling unref() will allow this program to exit immediately after the get command finishes. Otherwise the client would hang as long as the client-server connection is alive.\n*/\nclient.unref()\nclient.get("foo", function (err, value){\n    if (err) throw(err)\n    console.log(value)\n})\n```\n\n## Friendlier hash commands\n\nMost Redis commands take a single String or an Array of Strings as arguments, and replies are sent back as a single String or an Array of Strings.\nWhen dealing with hash values, there are a couple of useful exceptions to this.\n\n### client.hgetall(hash)\n\nThe reply from an HGETALL command will be converted into a JavaScript Object by `node_redis`.  That way you can interact\nwith the responses using JavaScript syntax.\n\nExample:\n\n    client.hmset("hosts", "mjr", "1", "another", "23", "home", "1234");\n    client.hgetall("hosts", function (err, obj) {\n        console.dir(obj);\n    });\n\nOutput:\n\n    { mjr: \'1\', another: \'23\', home: \'1234\' }\n\n### client.hmset(hash, obj, [callback])\n\nMultiple values in a hash can be set by supplying an object:\n\n    client.HMSET(key2, {\n        "0123456789": "abcdefghij", // NOTE: key and value will be coerced to strings\n        "some manner of key": "a type of value"\n    });\n\nThe properties and values of this Object will be set as keys and values in the Redis hash.\n\n### client.hmset(hash, key1, val1, ... keyn, valn, [callback])\n\nMultiple values may also be set by supplying a list:\n\n    client.HMSET(key1, "0123456789", "abcdefghij", "some manner of key", "a type of value");\n\n\n## Publish / Subscribe\n\nHere is a simple example of the API for publish / subscribe.  This program opens two\nclient connections, subscribes to a channel on one of them, and publishes to that\nchannel on the other:\n\n```js\n    var redis = require("redis"),\n        client1 = redis.createClient(), client2 = redis.createClient(),\n        msg_count = 0;\n\n    client1.on("subscribe", function (channel, count) {\n        client2.publish("a nice channel", "I am sending a message.");\n        client2.publish("a nice channel", "I am sending a second message.");\n        client2.publish("a nice channel", "I am sending my last message.");\n    });\n\n    client1.on("message", function (channel, message) {\n        console.log("client1 channel " + channel + ": " + message);\n        msg_count += 1;\n        if (msg_count === 3) {\n            client1.unsubscribe();\n            client1.end();\n            client2.end();\n        }\n    });\n\n    client1.incr("did a thing");\n    client1.subscribe("a nice channel");\n```\n\nWhen a client issues a `SUBSCRIBE` or `PSUBSCRIBE`, that connection is put into a "subscriber" mode.\nAt that point, only commands that modify the subscription set are valid.  When the subscription\nset is empty, the connection is put back into regular mode.\n\nIf you need to send regular commands to Redis while in subscriber mode, just open another connection.\n\n## Subscriber Events\n\nIf a client has subscriptions active, it may emit these events:\n\n### "message" (channel, message)\n\nClient will emit `message` for every message received that matches an active subscription.\nListeners are passed the channel name as `channel` and the message Buffer as `message`.\n\n### "pmessage" (pattern, channel, message)\n\nClient will emit `pmessage` for every message received that matches an active subscription pattern.\nListeners are passed the original pattern used with `PSUBSCRIBE` as `pattern`, the sending channel\nname as `channel`, and the message Buffer as `message`.\n\n### "subscribe" (channel, count)\n\nClient will emit `subscribe` in response to a `SUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.\n\n### "psubscribe" (pattern, count)\n\nClient will emit `psubscribe` in response to a `PSUBSCRIBE` command.  Listeners are passed the\noriginal pattern as `pattern`, and the new count of subscriptions for this client as `count`.\n\n### "unsubscribe" (channel, count)\n\nClient will emit `unsubscribe` in response to a `UNSUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.  When\n`count` is 0, this client has left subscriber mode and no more subscriber events will be emitted.\n\n### "punsubscribe" (pattern, count)\n\nClient will emit `punsubscribe` in response to a `PUNSUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.  When\n`count` is 0, this client has left subscriber mode and no more subscriber events will be emitted.\n\n## client.multi([commands])\n\n`MULTI` commands are queued up until an `EXEC` is issued, and then all commands are run atomically by\nRedis.  The interface in `node_redis` is to return an individual `Multi` object by calling `client.multi()`.\n\n```js\n    var redis  = require("./index"),\n        client = redis.createClient(), set_size = 20;\n\n    client.sadd("bigset", "a member");\n    client.sadd("bigset", "another member");\n\n    while (set_size > 0) {\n        client.sadd("bigset", "member " + set_size);\n        set_size -= 1;\n    }\n\n    // multi chain with an individual callback\n    client.multi()\n        .scard("bigset")\n        .smembers("bigset")\n        .keys("*", function (err, replies) {\n            // NOTE: code in this callback is NOT atomic\n            // this only happens after the the .exec call finishes.\n            client.mget(replies, redis.print);\n        })\n        .dbsize()\n        .exec(function (err, replies) {\n            console.log("MULTI got " + replies.length + " replies");\n            replies.forEach(function (reply, index) {\n                console.log("Reply " + index + ": " + reply.toString());\n            });\n        });\n```\n\n### Multi.exec( callback )\n\n`client.multi()` is a constructor that returns a `Multi` object.  `Multi` objects share all of the\nsame command methods as `client` objects do.  Commands are queued up inside the `Multi` object\nuntil `Multi.exec()` is invoked.\n\nThe `callback` of `.exec()` will get invoked with two arguments:\n\n* `err` **type:** `null | Array` err is either null or an array of Error Objects corresponding the the sequence the commands where chained. The last item of the array will always be an `EXECABORT` type of error originating from the `.exec()` itself.\n* `results` **type:** `null | Array` results is an array of responses corresponding the the sequence the commands where chained.\n\nYou can either chain together `MULTI` commands as in the above example, or you can queue individual\ncommands while still sending regular client command as in this example:\n\n```js\n    var redis  = require("redis"),\n        client = redis.createClient(), multi;\n\n    // start a separate multi command queue\n    multi = client.multi();\n    multi.incr("incr thing", redis.print);\n    multi.incr("incr other thing", redis.print);\n\n    // runs immediately\n    client.mset("incr thing", 100, "incr other thing", 1, redis.print);\n\n    // drains multi queue and runs atomically\n    multi.exec(function (err, replies) {\n        console.log(replies); // 101, 2\n    });\n\n    // you can re-run the same transaction if you like\n    multi.exec(function (err, replies) {\n        console.log(replies); // 102, 3\n        client.quit();\n    });\n```\n\nIn addition to adding commands to the `MULTI` queue individually, you can also pass an array\nof commands and arguments to the constructor:\n\n```js\n    var redis  = require("redis"),\n        client = redis.createClient(), multi;\n\n    client.multi([\n        ["mget", "multifoo", "multibar", redis.print],\n        ["incr", "multifoo"],\n        ["incr", "multibar"]\n    ]).exec(function (err, replies) {\n        console.log(replies);\n    });\n```\n\n\n## Monitor mode\n\nRedis supports the `MONITOR` command, which lets you see all commands received by the Redis server\nacross all client connections, including from other client libraries and other computers.\n\nAfter you send the `MONITOR` command, no other commands are valid on that connection.  `node_redis`\nwill emit a `monitor` event for every new monitor message that comes across.  The callback for the\n`monitor` event takes a timestamp from the Redis server and an array of command arguments.\n\nHere is a simple example:\n\n```js\n    var client  = require("redis").createClient(),\n        util = require("util");\n\n    client.monitor(function (err, res) {\n        console.log("Entering monitoring mode.");\n    });\n\n    client.on("monitor", function (time, args) {\n        console.log(time + ": " + util.inspect(args));\n    });\n```\n\n# Extras\n\nSome other things you might like to know about.\n\n## client.server_info\n\nAfter the ready probe completes, the results from the INFO command are saved in the `client.server_info`\nobject.\n\nThe `versions` key contains an array of the elements of the version string for easy comparison.\n\n    > client.server_info.redis_version\n    \'2.3.0\'\n    > client.server_info.versions\n    [ 2, 3, 0 ]\n\n## redis.print()\n\nA handy callback function for displaying return values when testing.  Example:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    client.on("connect", function () {\n        client.set("foo_rand000000000000", "some fantastic value", redis.print);\n        client.get("foo_rand000000000000", redis.print);\n    });\n```\n\nThis will print:\n\n    Reply: OK\n    Reply: some fantastic value\n\nNote that this program will not exit cleanly because the client is still connected.\n\n## redis.debug_mode\n\nBoolean to enable debug mode and protocol tracing.\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    redis.debug_mode = true;\n\n    client.on("connect", function () {\n        client.set("foo_rand000000000000", "some fantastic value");\n    });\n```\n\nThis will display:\n\n    mjr:~/work/node_redis (master)$ node ~/example.js\n    send command: *3\n    $3\n    SET\n    $20\n    foo_rand000000000000\n    $20\n    some fantastic value\n\n    on_data: +OK\n\n`send command` is data sent into Redis and `on_data` is data received from Redis.\n\n## Multi-word commands\n\nTo execute redis multi-word commands like `SCRIPT LOAD` or `CLIENT LIST` pass\nthe second word as first parameter:\n\n    client.script(\'load\', \'return 1\');\n    client.multi().script(\'load\', \'return 1\').exec(...);\n    client.multi([[\'script\', \'load\', \'return 1\']]).exec(...);\n\n## client.send_command(command_name, args, callback)\n\nUsed internally to send commands to Redis.  For convenience, nearly all commands that are published on the Redis\nWiki have been added to the `client` object.  However, if I missed any, or if new commands are introduced before\nthis library is updated, you can use `send_command()` to send arbitrary commands to Redis.\n\nAll commands are sent as multi-bulk commands.  `args` can either be an Array of arguments, or omitted.\n\n## client.connected\n\nBoolean tracking the state of the connection to the Redis server.\n\n## client.command_queue.length\n\nThe number of commands that have been sent to the Redis server but not yet replied to.  You can use this to\nenforce some kind of maximum queue depth for commands while connected.\n\nDon\'t mess with `client.command_queue` though unless you really know what you are doing.\n\n## client.offline_queue.length\n\nThe number of commands that have been queued up for a future connection.  You can use this to enforce\nsome kind of maximum queue depth for pre-connection commands.\n\n## client.retry_delay\n\nCurrent delay in milliseconds before a connection retry will be attempted.  This starts at `250`.\n\n## client.retry_backoff\n\nMultiplier for future retry timeouts.  This should be larger than 1 to add more time between retries.\nDefaults to 1.7.  The default initial connection retry is 250, so the second retry will be 425, followed by 723.5, etc.\n\n### Commands with Optional and Keyword arguments\n\nThis applies to anything that uses an optional `[WITHSCORES]` or `[LIMIT offset count]` in the [redis.io/commands](http://redis.io/commands) documentation.\n\nExample:\n```js\nvar args = [ \'myzset\', 1, \'one\', 2, \'two\', 3, \'three\', 99, \'ninety-nine\' ];\nclient.zadd(args, function (err, response) {\n    if (err) throw err;\n    console.log(\'added \'+response+\' items.\');\n\n    // -Infinity and +Infinity also work\n    var args1 = [ \'myzset\', \'+inf\', \'-inf\' ];\n    client.zrevrangebyscore(args1, function (err, response) {\n        if (err) throw err;\n        console.log(\'example1\', response);\n        // write your code here\n    });\n\n    var max = 3, min = 1, offset = 1, count = 2;\n    var args2 = [ \'myzset\', max, min, \'WITHSCORES\', \'LIMIT\', offset, count ];\n    client.zrevrangebyscore(args2, function (err, response) {\n        if (err) throw err;\n        console.log(\'example2\', response);\n        // write your code here\n    });\n});\n```\n\n## TODO\n\nBetter tests for auth, disconnect/reconnect, and all combinations thereof.\n\nStream large set/get values into and out of Redis.  Otherwise the entire value must be in node\'s memory.\n\nPerformance can be better for very large values.\n\nI think there are more performance improvements left in there for smaller values, especially for large lists of small values.\n\n## How to Contribute\n- open a pull request and then wait for feedback (if\n  [DTrejo](http://github.com/dtrejo) does not get back to you within 2 days,\n  comment again with indignation!)\n\n## Contributors\nSome people have have added features and fixed bugs in `node_redis` other than me.\n\nOrdered by date of first contribution.\n[Auto-generated](http://github.com/dtrejo/node-authors) on Wed Jul 25 2012 19:14:59 GMT-0700 (PDT).\n\n- [Matt Ranney aka `mranney`](https://github.com/mranney)\n- [Tim-Smart aka `tim-smart`](https://github.com/tim-smart)\n- [Tj Holowaychuk aka `visionmedia`](https://github.com/visionmedia)\n- [rick aka `technoweenie`](https://github.com/technoweenie)\n- [Orion Henry aka `orionz`](https://github.com/orionz)\n- [Aivo Paas aka `aivopaas`](https://github.com/aivopaas)\n- [Hank Sims aka `hanksims`](https://github.com/hanksims)\n- [Paul Carey aka `paulcarey`](https://github.com/paulcarey)\n- [Pieter Noordhuis aka `pietern`](https://github.com/pietern)\n- [nithesh aka `nithesh`](https://github.com/nithesh)\n- [Andy Ray aka `andy2ray`](https://github.com/andy2ray)\n- [unknown aka `unknowdna`](https://github.com/unknowdna)\n- [Dave Hoover aka `redsquirrel`](https://github.com/redsquirrel)\n- [Vladimir Dronnikov aka `dvv`](https://github.com/dvv)\n- [Umair Siddique aka `umairsiddique`](https://github.com/umairsiddique)\n- [Louis-Philippe Perron aka `lp`](https://github.com/lp)\n- [Mark Dawson aka `markdaws`](https://github.com/markdaws)\n- [Ian Babrou aka `bobrik`](https://github.com/bobrik)\n- [Felix Geisendörfer aka `felixge`](https://github.com/felixge)\n- [Jean-Hugues Pinson aka `undefined`](https://github.com/undefined)\n- [Maksim Lin aka `maks`](https://github.com/maks)\n- [Owen Smith aka `orls`](https://github.com/orls)\n- [Zachary Scott aka `zzak`](https://github.com/zzak)\n- [TEHEK Firefox aka `TEHEK`](https://github.com/TEHEK)\n- [Isaac Z. Schlueter aka `isaacs`](https://github.com/isaacs)\n- [David Trejo aka `DTrejo`](https://github.com/DTrejo)\n- [Brian Noguchi aka `bnoguchi`](https://github.com/bnoguchi)\n- [Philip Tellis aka `bluesmoon`](https://github.com/bluesmoon)\n- [Marcus Westin aka `marcuswestin2`](https://github.com/marcuswestin2)\n- [Jed Schmidt aka `jed`](https://github.com/jed)\n- [Dave Peticolas aka `jdavisp3`](https://github.com/jdavisp3)\n- [Trae Robrock aka `trobrock`](https://github.com/trobrock)\n- [Shankar Karuppiah aka `shankar0306`](https://github.com/shankar0306)\n- [Ignacio Burgueño aka `ignacio`](https://github.com/ignacio)\n\nThanks.\n\n## LICENSE - "MIT License"\n\nCopyright (c) 2010 Matthew Ranney, http://ranney.com/\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the "Software"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n![spacer](http://ranney.com/1px.gif)\n',
189 silly resolved     readmeFilename: 'README.md',
189 silly resolved     _id: 'redis@0.10.1',
189 silly resolved     _from: 'redis@' },
189 silly resolved   { name: 'hiredis',
189 silly resolved     description: 'Wrapper for reply processing code in hiredis',
189 silly resolved     version: '0.1.16',
189 silly resolved     homepage: 'http://github.com/pietern/hiredis-node',
189 silly resolved     author: { name: 'Pieter Noordhuis', email: 'pcnoordhuis@gmail.com' },
189 silly resolved     main: 'hiredis',
189 silly resolved     scripts: { test: 'node test/reader.js', install: 'node-gyp rebuild' },
189 silly resolved     dependencies: { bindings: '*' },
189 silly resolved     engines: { node: '>= 0.6.0' },
189 silly resolved     repository: { type: 'git', url: 'git@github.com:pietern/hiredis-node.git' },
189 silly resolved     bugs: { url: 'https://github.com/pietern/hiredis-node/issues' },
189 silly resolved     licenses: [ [Object] ],
189 silly resolved     gypfile: true,
189 silly resolved     readme: '[![Build Status](https://travis-ci.org/pietern/hiredis-node.png?branch=master)](https://travis-ci.org/pietern/hiredis-node)\n\n# hiredis-node\n\nNode extension that wraps [hiredis][hiredis].\nBecause Node is already good at doing I/O, hiredis-node only provides\nbindings to the protocol parser.\nThe hiredis protocol parser is faster than JavaScript protocol parsers,\nbut the speedup only becomes noticable for large replies.\nIf you use Redis for simple SET/GET operations, there won\'t be a big\nbenefit to using hiredis.\nIf you use Redis for big SUNION/SINTER/LRANGE/ZRANGE operations, the\nbenefit to using hiredis-node can be significant.\n\n[hiredis]: http://github.com/redis/hiredis\n\n## Install\n\nInstall with [NPM][npm]:\n\n```\nnpm install hiredis\n```\n\n[npm]: https://npmjs.org/\n\n## Usage\n\nhiredis-node works out of the box with Matt Ranney\'s [node_redis][node_redis].\nThe latter has an optional dependency on hiredis-node, so maybe you\'re\nalready using it without knowing.\n\nAlternatively, you can use it directly:\n\n```javascript\nvar hiredis = require("hiredis"),\n    reader = new hiredis.Reader();\n\n// Data comes in\nreader.feed("$5\\r\\nhello\\r\\n");\n\n// Reply comes out\nreader.get() // => "hello"\n```\n\nInstead of returning strings for bulk payloads, it can also return\nbuffers:\n\n```javascript\nvar hiredis = require("hiredis"),\n    reader = new hiredis.Reader({ return_buffers: true });\n\n// Data comes in\nreader.feed("$5\\r\\nhello\\r\\n");\n\n// Reply comes out\nreader.get() // => <Buffer 68 65 6c 6c 6f>\n```\n\n[node_redis]: http://github.com/mranney/node_redis\n\n## Windows\n\nDmitry Gorbunov (@fuwaneko) made a [fork of hiredis-node][windows_fork] with Windows support.\n\n[windows_fork]: https://github.com/fuwaneko/hiredis-node\n\n## License\n\nThis code is released under the BSD license, after the license of hiredis.\n',
189 silly resolved     readmeFilename: 'README.md',
189 silly resolved     _id: 'hiredis@0.1.16',
189 silly resolved     dist: { shasum: 'fdee33df7edb3c64a497065830e0aa021f1f742e' },
189 silly resolved     _from: 'hiredis@',
189 silly resolved     _resolved: 'http://registry.npmjs.org/hiredis/-/hiredis-0.1.16.tgz' } ]
190 info install redis@0.10.1 into /home/jwelzel/dev/java/rest
191 info install hiredis@0.1.16 into /home/jwelzel/dev/java/rest
192 info installOne redis@0.10.1
193 info installOne hiredis@0.1.16
194 verbose from cache /home/jwelzel/.npm/hiredis/0.1.16/package/package.json
195 info /home/jwelzel/dev/java/rest/node_modules/hiredis unbuild
196 verbose read json /home/jwelzel/dev/java/rest/node_modules/hiredis/package.json
197 verbose from cache /home/jwelzel/.npm/redis/0.10.1/package/package.json
198 info /home/jwelzel/dev/java/rest/node_modules/redis unbuild
199 verbose from cache /home/jwelzel/dev/java/rest/node_modules/redis/package.json
200 info preuninstall redis@0.10.1
201 info uninstall redis@0.10.1
202 verbose tar unpack /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
203 silly lockFile b64f2e91-v-java-rest-node-modules-hiredis /home/jwelzel/dev/java/rest/node_modules/hiredis
204 verbose lock /home/jwelzel/dev/java/rest/node_modules/hiredis /home/jwelzel/.npm/b64f2e91-v-java-rest-node-modules-hiredis.lock
205 silly lockFile 3d548578-l-npm-hiredis-0-1-16-package-tgz /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
206 verbose lock /home/jwelzel/.npm/hiredis/0.1.16/package.tgz /home/jwelzel/.npm/3d548578-l-npm-hiredis-0-1-16-package-tgz.lock
207 verbose true,/home/jwelzel/dev/java/rest/node_modules,/home/jwelzel/dev/java/rest/node_modules unbuild redis@0.10.1
208 info postuninstall redis@0.10.1
209 silly gunzTarPerm modes [ '755', '644' ]
210 silly gunzTarPerm extractEntry package.json
211 silly gunzTarPerm extractEntry README.md
212 silly gunzTarPerm extractEntry bench.js
213 silly gunzTarPerm extractEntry hiredis.js
214 silly gunzTarPerm extractEntry COPYING
215 verbose tar unpack /home/jwelzel/.npm/redis/0.10.1/package.tgz
216 silly lockFile 018ab644-dev-java-rest-node-modules-redis /home/jwelzel/dev/java/rest/node_modules/redis
217 verbose lock /home/jwelzel/dev/java/rest/node_modules/redis /home/jwelzel/.npm/018ab644-dev-java-rest-node-modules-redis.lock
218 silly lockFile bd601174-zel-npm-redis-0-10-1-package-tgz /home/jwelzel/.npm/redis/0.10.1/package.tgz
219 verbose lock /home/jwelzel/.npm/redis/0.10.1/package.tgz /home/jwelzel/.npm/bd601174-zel-npm-redis-0-10-1-package-tgz.lock
220 silly gunzTarPerm modes [ '755', '644' ]
221 silly gunzTarPerm extractEntry package.json
222 silly gunzTarPerm extractEntry binding.gyp
223 silly gunzTarPerm extractEntry deps/hiredis/README.md
224 silly gunzTarPerm extractEntry .npmignore
225 silly gunzTarPerm extractEntry README.md
226 silly gunzTarPerm extractEntry test-unref.js
227 silly gunzTarPerm extractEntry deps/hiredis/example-libev.c
228 silly gunzTarPerm extractEntry diff_multi_bench_output.js
229 silly gunzTarPerm extractEntry multi_bench.js
230 silly gunzTarPerm extractEntry deps/hiredis/Makefile
231 silly gunzTarPerm extractEntry deps/hiredis/CHANGELOG.md
232 silly gunzTarPerm extractEntry deps/hiredis/adapters/ae.h
233 silly gunzTarPerm extractEntry deps/hiredis/adapters/libev.h
234 silly gunzTarPerm extractEntry deps/hiredis/adapters/libevent.h
235 silly gunzTarPerm extractEntry deps/hiredis/async.c
236 silly gunzTarPerm extractEntry index.js
237 silly gunzTarPerm extractEntry test.js
238 silly gunzTarPerm extractEntry deps/hiredis/async.h
239 silly gunzTarPerm extractEntry deps/hiredis/dict.c
240 silly gunzTarPerm extractEntry generate_commands.js
241 silly gunzTarPerm extractEntry deps/hiredis/dict.h
242 silly gunzTarPerm extractEntry deps/hiredis/example-ae.c
243 silly gunzTarPerm extractEntry lib/commands.js
244 silly gunzTarPerm extractEntry lib/queue.js
245 silly gunzTarPerm extractEntry deps/hiredis/COPYING
246 silly gunzTarPerm extractEntry deps/hiredis/example-libevent.c
247 silly gunzTarPerm extractEntry deps/hiredis/example.c
248 silly gunzTarPerm extractEntry deps/hiredis/fmacros.h
249 silly gunzTarPerm extractEntry lib/to_array.js
250 silly gunzTarPerm extractEntry lib/util.js
251 silly gunzTarPerm extractEntry deps/hiredis/hiredis.c
252 silly gunzTarPerm extractEntry deps/hiredis/hiredis.h
253 silly gunzTarPerm extractEntry deps/hiredis/net.c
254 silly gunzTarPerm extractEntry deps/hiredis/net.h
255 silly gunzTarPerm extractEntry deps/hiredis/sds.c
256 silly gunzTarPerm extractEntry deps/hiredis/sds.h
257 silly gunzTarPerm extractEntry deps/hiredis/test.c
258 silly gunzTarPerm extractEntry deps/hiredis.gyp
259 silly gunzTarPerm extractEntry lib/parser/hiredis.js
260 silly gunzTarPerm extractEntry lib/parser/javascript.js
261 silly gunzTarPerm extractEntry src/hiredis.cc
262 silly gunzTarPerm extractEntry src/reader.cc
263 silly gunzTarPerm extractEntry src/reader.h
264 silly gunzTarPerm extractEntry test/reader.js
265 silly gunzTarPerm extractEntry examples/auth.js
266 silly gunzTarPerm extractEntry examples/mget.js
267 silly gunzTarPerm extractEntry examples/monitor.js
268 silly gunzTarPerm extractEntry examples/multi.js
269 silly gunzTarPerm extractEntry examples/file.js
270 silly gunzTarPerm extractEntry examples/psubscribe.js
271 silly gunzTarPerm extractEntry examples/pub_sub.js
272 silly gunzTarPerm extractEntry examples/simple.js
273 silly gunzTarPerm extractEntry examples/sort.js
274 silly gunzTarPerm extractEntry examples/subqueries.js
275 silly gunzTarPerm extractEntry examples/extend.js
276 silly gunzTarPerm extractEntry examples/subquery.js
277 silly gunzTarPerm extractEntry examples/eval.js
278 silly gunzTarPerm extractEntry examples/unix_socket.js
279 silly gunzTarPerm extractEntry examples/backpressure_drain.js
280 silly gunzTarPerm extractEntry examples/web_server.js
281 silly gunzTarPerm extractEntry examples/multi2.js
282 silly gunzTarPerm extractEntry changelog.md
283 silly gunzTarPerm extractEntry benches/buffer_bench.js
284 silly gunzTarPerm extractEntry benches/hiredis_parser.js
285 silly gunzTarPerm extractEntry benches/re_sub_test.js
286 silly gunzTarPerm extractEntry benches/reconnect_test.js
287 silly gunzTarPerm extractEntry benches/sub_quit_test.js
288 silly gunzTarPerm extractEntry benches/stress/codec.js
289 silly gunzTarPerm extractEntry benches/stress/pubsub/pub.js
290 silly gunzTarPerm extractEntry benches/stress/pubsub/server.js
291 silly gunzTarPerm extractEntry benches/stress/pubsub/run
292 silly gunzTarPerm extractEntry benches/stress/rpushblpop/pub.js
293 silly gunzTarPerm extractEntry benches/stress/rpushblpop/server.js
294 silly gunzTarPerm extractEntry benches/stress/rpushblpop/run
295 silly gunzTarPerm extractEntry benches/stress/speed/speed.js
296 silly gunzTarPerm extractEntry benches/stress/speed/00
297 silly gunzTarPerm extractEntry benches/stress/speed/plot
298 silly gunzTarPerm extractEntry benches/stress/speed/size-rate.png
299 verbose read json /home/jwelzel/dev/java/rest/node_modules/hiredis/package.json
300 silly lockFile b64f2e91-v-java-rest-node-modules-hiredis /home/jwelzel/dev/java/rest/node_modules/hiredis
301 silly lockFile b64f2e91-v-java-rest-node-modules-hiredis /home/jwelzel/dev/java/rest/node_modules/hiredis
302 silly lockFile 3d548578-l-npm-hiredis-0-1-16-package-tgz /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
303 silly lockFile 3d548578-l-npm-hiredis-0-1-16-package-tgz /home/jwelzel/.npm/hiredis/0.1.16/package.tgz
304 info preinstall hiredis@0.1.16
305 verbose from cache /home/jwelzel/dev/java/rest/node_modules/hiredis/package.json
306 verbose readDependencies using package.json deps
307 verbose from cache /home/jwelzel/dev/java/rest/node_modules/hiredis/package.json
308 verbose readDependencies using package.json deps
309 verbose cache add [ 'bindings@*', null ]
310 verbose cache add name=undefined spec="bindings@*" args=["bindings@*",null]
311 verbose parsed url { protocol: null,
311 verbose parsed url   slashes: null,
311 verbose parsed url   auth: null,
311 verbose parsed url   host: null,
311 verbose parsed url   port: null,
311 verbose parsed url   hostname: null,
311 verbose parsed url   hash: null,
311 verbose parsed url   search: null,
311 verbose parsed url   query: null,
311 verbose parsed url   pathname: 'bindings@*',
311 verbose parsed url   path: 'bindings@*',
311 verbose parsed url   href: 'bindings@*' }
312 verbose cache add name="bindings" spec="*" args=["bindings","*"]
313 verbose parsed url { protocol: null,
313 verbose parsed url   slashes: null,
313 verbose parsed url   auth: null,
313 verbose parsed url   host: null,
313 verbose parsed url   port: null,
313 verbose parsed url   hostname: null,
313 verbose parsed url   hash: null,
313 verbose parsed url   search: null,
313 verbose parsed url   query: null,
313 verbose parsed url   pathname: '*',
313 verbose parsed url   path: '*',
313 verbose parsed url   href: '*' }
314 verbose addNamed [ 'bindings', '*' ]
315 verbose addNamed [ null, '*' ]
316 silly lockFile a3858fc2-bindings bindings@*
317 verbose lock bindings@* /home/jwelzel/.npm/a3858fc2-bindings.lock
318 silly addNameRange { name: 'bindings', range: '*', hasData: false }
319 verbose url raw bindings
320 verbose url resolving [ 'http://registry.npmjs.org/', './bindings' ]
321 verbose url resolved http://registry.npmjs.org/bindings
322 info trying registry request attempt 1 at 12:39:42
323 http GET http://registry.npmjs.org/bindings
324 verbose read json /home/jwelzel/dev/java/rest/node_modules/redis/package.json
325 silly lockFile 018ab644-dev-java-rest-node-modules-redis /home/jwelzel/dev/java/rest/node_modules/redis
326 silly lockFile 018ab644-dev-java-rest-node-modules-redis /home/jwelzel/dev/java/rest/node_modules/redis
327 silly lockFile bd601174-zel-npm-redis-0-10-1-package-tgz /home/jwelzel/.npm/redis/0.10.1/package.tgz
328 silly lockFile bd601174-zel-npm-redis-0-10-1-package-tgz /home/jwelzel/.npm/redis/0.10.1/package.tgz
329 info preinstall redis@0.10.1
330 verbose from cache /home/jwelzel/dev/java/rest/node_modules/redis/package.json
331 verbose readDependencies using package.json deps
332 verbose from cache /home/jwelzel/dev/java/rest/node_modules/redis/package.json
333 verbose readDependencies using package.json deps
334 silly resolved []
335 verbose about to build /home/jwelzel/dev/java/rest/node_modules/redis
336 info build /home/jwelzel/dev/java/rest/node_modules/redis
337 verbose from cache /home/jwelzel/dev/java/rest/node_modules/redis/package.json
338 verbose linkStuff [ false,
338 verbose linkStuff   false,
338 verbose linkStuff   false,
338 verbose linkStuff   '/home/jwelzel/dev/java/rest/node_modules' ]
339 info linkStuff redis@0.10.1
340 verbose linkBins redis@0.10.1
341 verbose linkMans redis@0.10.1
342 verbose rebuildBundles redis@0.10.1
343 info install redis@0.10.1
344 info postinstall redis@0.10.1
345 http 200 http://registry.npmjs.org/bindings
346 silly registry.get cb [ 200,
346 silly registry.get   { via: '1.1 varnish, 1.1 JUNO',
346 silly registry.get     connection: 'Keep-Alive',
346 silly registry.get     'proxy-connection': 'Keep-Alive',
346 silly registry.get     'content-length': '32616',
346 silly registry.get     age: '71',
346 silly registry.get     date: 'Wed, 26 Mar 2014 15:41:24 GMT',
346 silly registry.get     'content-type': 'application/json',
346 silly registry.get     etag: '"D8YNNF532Z87MUTG0SNA7AVV"',
346 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
346 silly registry.get     'accept-ranges': 'bytes',
346 silly registry.get     'cache-control': 'max-age=1',
346 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-jfk1021-JFK',
346 silly registry.get     'x-cache': 'MISS, HIT',
346 silly registry.get     'x-cache-hits': '0, 2',
346 silly registry.get     'x-timer': 'S1395848484.143940210,VS0,VE0',
346 silly registry.get     vary: 'Accept' } ]
347 silly addNameRange number 2 { name: 'bindings', range: '*', hasData: true }
348 silly addNameRange versions [ 'bindings',
348 silly addNameRange   [ '0.0.1',
348 silly addNameRange     '0.1.0',
348 silly addNameRange     '0.1.1',
348 silly addNameRange     '0.2.0',
348 silly addNameRange     '0.2.1',
348 silly addNameRange     '0.2.2',
348 silly addNameRange     '0.2.3',
348 silly addNameRange     '0.2.4',
348 silly addNameRange     '0.3.0',
348 silly addNameRange     '0.4.0',
348 silly addNameRange     '1.0.0',
348 silly addNameRange     '1.1.0',
348 silly addNameRange     '1.1.1' ] ]
349 verbose addNamed [ 'bindings', '1.1.1' ]
350 verbose addNamed [ '1.1.1', '1.1.1' ]
351 silly lockFile 52dd60a7-bindings-1-1-1 bindings@1.1.1
352 verbose lock bindings@1.1.1 /home/jwelzel/.npm/52dd60a7-bindings-1-1-1.lock
353 silly lockFile 838abcf5--org-bindings-bindings-1-1-1-tgz http://registry.npmjs.org/bindings/-/bindings-1.1.1.tgz
354 verbose lock http://registry.npmjs.org/bindings/-/bindings-1.1.1.tgz /home/jwelzel/.npm/838abcf5--org-bindings-bindings-1-1-1-tgz.lock
355 verbose addRemoteTarball [ 'http://registry.npmjs.org/bindings/-/bindings-1.1.1.tgz',
355 verbose addRemoteTarball   '951f7ae010302ffc50b265b124032017ed2bf6f3' ]
356 info retry fetch attempt 1 at 12:39:42
357 verbose fetch to= /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/tmp.tgz
358 http GET http://registry.npmjs.org/bindings/-/bindings-1.1.1.tgz
359 http 200 http://registry.npmjs.org/bindings/-/bindings-1.1.1.tgz
360 silly shasum updated bytes 3509
361 info shasum 951f7ae010302ffc50b265b124032017ed2bf6f3
361 info shasum /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/tmp.tgz
362 verbose tar unpack /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/tmp.tgz
363 silly lockFile 0fc99d31-82622-0-5323153228964657-package /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package
364 verbose lock /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package /home/jwelzel/.npm/0fc99d31-82622-0-5323153228964657-package.lock
365 silly lockFile d43719b5-82622-0-5323153228964657-tmp-tgz /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/tmp.tgz
366 verbose lock /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/tmp.tgz /home/jwelzel/.npm/d43719b5-82622-0-5323153228964657-tmp-tgz.lock
367 silly gunzTarPerm modes [ '755', '644' ]
368 silly gunzTarPerm extractEntry package.json
369 silly gunzTarPerm extractEntry README.md
370 silly gunzTarPerm extractEntry bindings.js
371 verbose read json /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package/package.json
372 silly lockFile 0fc99d31-82622-0-5323153228964657-package /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package
373 silly lockFile 0fc99d31-82622-0-5323153228964657-package /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package
374 silly lockFile d43719b5-82622-0-5323153228964657-tmp-tgz /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/tmp.tgz
375 silly lockFile d43719b5-82622-0-5323153228964657-tmp-tgz /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/tmp.tgz
376 verbose from cache /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package/package.json
377 verbose tar pack [ '/home/jwelzel/.npm/bindings/1.1.1/package.tgz',
377 verbose tar pack   '/home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package' ]
378 verbose tarball /home/jwelzel/.npm/bindings/1.1.1/package.tgz
379 verbose folder /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package
380 silly lockFile 0fc99d31-82622-0-5323153228964657-package /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package
381 verbose lock /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package /home/jwelzel/.npm/0fc99d31-82622-0-5323153228964657-package.lock
382 silly lockFile 1961873f-l-npm-bindings-1-1-1-package-tgz /home/jwelzel/.npm/bindings/1.1.1/package.tgz
383 verbose lock /home/jwelzel/.npm/bindings/1.1.1/package.tgz /home/jwelzel/.npm/1961873f-l-npm-bindings-1-1-1-package-tgz.lock
384 silly lockFile 0fc99d31-82622-0-5323153228964657-package /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package
385 silly lockFile 0fc99d31-82622-0-5323153228964657-package /home/jwelzel/tmp/npm-31350/1395848382622-0.5323153228964657/package
386 silly lockFile 1961873f-l-npm-bindings-1-1-1-package-tgz /home/jwelzel/.npm/bindings/1.1.1/package.tgz
387 silly lockFile 1961873f-l-npm-bindings-1-1-1-package-tgz /home/jwelzel/.npm/bindings/1.1.1/package.tgz
388 silly lockFile 98818d4e-elzel-npm-bindings-1-1-1-package /home/jwelzel/.npm/bindings/1.1.1/package
389 verbose lock /home/jwelzel/.npm/bindings/1.1.1/package /home/jwelzel/.npm/98818d4e-elzel-npm-bindings-1-1-1-package.lock
390 silly lockFile 98818d4e-elzel-npm-bindings-1-1-1-package /home/jwelzel/.npm/bindings/1.1.1/package
391 silly lockFile 98818d4e-elzel-npm-bindings-1-1-1-package /home/jwelzel/.npm/bindings/1.1.1/package
392 verbose tar unpack /home/jwelzel/.npm/bindings/1.1.1/package.tgz
393 silly lockFile 98818d4e-elzel-npm-bindings-1-1-1-package /home/jwelzel/.npm/bindings/1.1.1/package
394 verbose lock /home/jwelzel/.npm/bindings/1.1.1/package /home/jwelzel/.npm/98818d4e-elzel-npm-bindings-1-1-1-package.lock
395 silly lockFile 1961873f-l-npm-bindings-1-1-1-package-tgz /home/jwelzel/.npm/bindings/1.1.1/package.tgz
396 verbose lock /home/jwelzel/.npm/bindings/1.1.1/package.tgz /home/jwelzel/.npm/1961873f-l-npm-bindings-1-1-1-package-tgz.lock
397 silly gunzTarPerm modes [ '755', '644' ]
398 silly gunzTarPerm extractEntry package.json
399 silly gunzTarPerm extractEntry README.md
400 silly gunzTarPerm extractEntry bindings.js
401 verbose read json /home/jwelzel/.npm/bindings/1.1.1/package/package.json
402 silly lockFile 98818d4e-elzel-npm-bindings-1-1-1-package /home/jwelzel/.npm/bindings/1.1.1/package
403 silly lockFile 98818d4e-elzel-npm-bindings-1-1-1-package /home/jwelzel/.npm/bindings/1.1.1/package
404 silly lockFile 1961873f-l-npm-bindings-1-1-1-package-tgz /home/jwelzel/.npm/bindings/1.1.1/package.tgz
405 silly lockFile 1961873f-l-npm-bindings-1-1-1-package-tgz /home/jwelzel/.npm/bindings/1.1.1/package.tgz
406 silly shasum updated bytes 3499
407 info shasum b4c67493ed67adef0943701dbc1c49315b17a9df
407 info shasum /home/jwelzel/.npm/bindings/1.1.1/package.tgz
408 verbose from cache /home/jwelzel/.npm/bindings/1.1.1/package/package.json
409 verbose chmod /home/jwelzel/.npm/bindings/1.1.1/package.tgz 644
410 verbose chown /home/jwelzel/.npm/bindings/1.1.1/package.tgz [ 0, 0 ]
411 silly lockFile 838abcf5--org-bindings-bindings-1-1-1-tgz http://registry.npmjs.org/bindings/-/bindings-1.1.1.tgz
412 silly lockFile 838abcf5--org-bindings-bindings-1-1-1-tgz http://registry.npmjs.org/bindings/-/bindings-1.1.1.tgz
413 silly lockFile 52dd60a7-bindings-1-1-1 bindings@1.1.1
414 silly lockFile 52dd60a7-bindings-1-1-1 bindings@1.1.1
415 silly lockFile a3858fc2-bindings bindings@*
416 silly lockFile a3858fc2-bindings bindings@*
417 silly resolved [ { name: 'bindings',
417 silly resolved     description: 'Helper module for loading your native module\'s .node file',
417 silly resolved     keywords: [ 'native', 'addon', 'bindings', 'gyp', 'waf', 'c', 'c++' ],
417 silly resolved     version: '1.1.1',
417 silly resolved     author:
417 silly resolved      { name: 'Nathan Rajlich',
417 silly resolved        email: 'nathan@tootallnate.net',
417 silly resolved        url: 'http://tootallnate.net' },
417 silly resolved     repository:
417 silly resolved      { type: 'git',
417 silly resolved        url: 'git://github.com/TooTallNate/node-bindings.git' },
417 silly resolved     main: './bindings.js',
417 silly resolved     readme: 'node-bindings\n=============\n### Helper module for loading your native module\'s .node file\n\nThis is a helper module for authors of Node.js native addon modules.\nIt is basically the "swiss army knife" of `require()`ing your native module\'s\n`.node` file.\n\nThroughout the course of Node\'s native addon history, addons have ended up being\ncompiled in a variety of different places, depending on which build tool and which\nversion of node was used. To make matters worse, now the _gyp_ build tool can\nproduce either a _Release_ or _Debug_ build, each being built into different\nlocations.\n\nThis module checks _all_ the possible locations that a native addon would be built\nat, and returns the first one that loads successfully.\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install bindings\n```\n\nOr add it to the `"dependencies"` section of your _package.json_ file.\n\n\nExample\n-------\n\n`require()`ing the proper bindings file for the current node version, platform\nand architecture is as simple as:\n\n``` js\nvar bindings = require(\'bindings\')(\'binding.node\')\n\n// Use your bindings defined in your C files\nbindings.your_c_function()\n```\n\n\nNice Error Output\n-----------------\n\nWhen the `.node` file could not be loaded, `node-bindings` throws an Error with\na nice error message telling you exactly what was tried. You can also check the\n`err.tries` Array property.\n\n```\nError: Could not load the bindings file. Tried:\n → /Users/nrajlich/ref/build/binding.node\n → /Users/nrajlich/ref/build/Debug/binding.node\n → /Users/nrajlich/ref/build/Release/binding.node\n → /Users/nrajlich/ref/out/Debug/binding.node\n → /Users/nrajlich/ref/Debug/binding.node\n → /Users/nrajlich/ref/out/Release/binding.node\n → /Users/nrajlich/ref/Release/binding.node\n → /Users/nrajlich/ref/build/default/binding.node\n → /Users/nrajlich/ref/compiled/0.8.2/darwin/x64/binding.node\n    at bindings (/Users/nrajlich/ref/node_modules/bindings/bindings.js:84:13)\n    at Object.<anonymous> (/Users/nrajlich/ref/lib/ref.js:5:47)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    ...\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
417 silly resolved     readmeFilename: 'README.md',
417 silly resolved     _id: 'bindings@1.1.1',
417 silly resolved     dist: { shasum: 'b4c67493ed67adef0943701dbc1c49315b17a9df' },
417 silly resolved     _from: 'bindings@*',
417 silly resolved     _resolved: 'http://registry.npmjs.org/bindings/-/bindings-1.1.1.tgz' } ]
418 info install bindings@1.1.1 into /home/jwelzel/dev/java/rest/node_modules/hiredis
419 info installOne bindings@1.1.1
420 verbose from cache /home/jwelzel/.npm/bindings/1.1.1/package/package.json
421 info /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings unbuild
422 verbose read json /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings/package.json
423 verbose tar unpack /home/jwelzel/.npm/bindings/1.1.1/package.tgz
424 silly lockFile 9321f695-es-hiredis-node-modules-bindings /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings
425 verbose lock /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings /home/jwelzel/.npm/9321f695-es-hiredis-node-modules-bindings.lock
426 silly lockFile 1961873f-l-npm-bindings-1-1-1-package-tgz /home/jwelzel/.npm/bindings/1.1.1/package.tgz
427 verbose lock /home/jwelzel/.npm/bindings/1.1.1/package.tgz /home/jwelzel/.npm/1961873f-l-npm-bindings-1-1-1-package-tgz.lock
428 silly gunzTarPerm modes [ '755', '644' ]
429 silly gunzTarPerm extractEntry package.json
430 silly gunzTarPerm extractEntry README.md
431 silly gunzTarPerm extractEntry bindings.js
432 verbose read json /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings/package.json
433 silly lockFile 9321f695-es-hiredis-node-modules-bindings /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings
434 silly lockFile 9321f695-es-hiredis-node-modules-bindings /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings
435 silly lockFile 1961873f-l-npm-bindings-1-1-1-package-tgz /home/jwelzel/.npm/bindings/1.1.1/package.tgz
436 silly lockFile 1961873f-l-npm-bindings-1-1-1-package-tgz /home/jwelzel/.npm/bindings/1.1.1/package.tgz
437 info preinstall bindings@1.1.1
438 verbose from cache /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings/package.json
439 verbose readDependencies using package.json deps
440 verbose from cache /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings/package.json
441 verbose readDependencies using package.json deps
442 silly resolved []
443 verbose about to build /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings
444 info build /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings
445 verbose from cache /home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules/bindings/package.json
446 verbose linkStuff [ false,
446 verbose linkStuff   false,
446 verbose linkStuff   false,
446 verbose linkStuff   '/home/jwelzel/dev/java/rest/node_modules/hiredis/node_modules' ]
447 info linkStuff bindings@1.1.1
448 verbose linkBins bindings@1.1.1
449 verbose linkMans bindings@1.1.1
450 verbose rebuildBundles bindings@1.1.1
451 info install bindings@1.1.1
452 info postinstall bindings@1.1.1
453 verbose about to build /home/jwelzel/dev/java/rest/node_modules/hiredis
454 info build /home/jwelzel/dev/java/rest/node_modules/hiredis
455 verbose from cache /home/jwelzel/dev/java/rest/node_modules/hiredis/package.json
456 verbose linkStuff [ false,
456 verbose linkStuff   false,
456 verbose linkStuff   false,
456 verbose linkStuff   '/home/jwelzel/dev/java/rest/node_modules' ]
457 info linkStuff hiredis@0.1.16
458 verbose linkBins hiredis@0.1.16
459 verbose linkMans hiredis@0.1.16
460 verbose rebuildBundles hiredis@0.1.16
461 verbose rebuildBundles [ 'bindings' ]
462 info install hiredis@0.1.16
463 verbose unsafe-perm in lifecycle false
464 verbose set uid from=0 to=1000
465 silly exec sh "-c" "node-gyp rebuild"
466 silly sh,-c,node-gyp rebuild,/home/jwelzel/dev/java/rest/node_modules/hiredis spawning
467 info hiredis@0.1.16 Failed to exec install script
468 info /home/jwelzel/dev/java/rest/node_modules/hiredis unbuild
469 verbose from cache /home/jwelzel/dev/java/rest/node_modules/hiredis/package.json
470 warn This failure might be due to the use of legacy binary "node"
471 warn For further explanations, please read
/usr/share/doc/nodejs/README.Debian
472 info preuninstall hiredis@0.1.16
473 info uninstall hiredis@0.1.16
474 verbose true,/home/jwelzel/dev/java/rest/node_modules,/home/jwelzel/dev/java/rest/node_modules unbuild hiredis@0.1.16
475 info postuninstall hiredis@0.1.16
476 error hiredis@0.1.16 install: `node-gyp rebuild`
476 error `sh "-c" "node-gyp rebuild"` failed with 1
477 error Failed at the hiredis@0.1.16 install script.
477 error This is most likely a problem with the hiredis package,
477 error not with npm itself.
477 error Tell the author that this fails on your system:
477 error     node-gyp rebuild
477 error You can get their info via:
477 error     npm owner ls hiredis
477 error There is likely additional logging output above.
478 error System Linux 3.11.0-12-generic
479 error command "/usr/bin/nodejs" "/usr/bin/npm" "install" "hiredis" "redis"
480 error cwd /home/jwelzel/dev/java/rest
481 error node -v v0.10.15
482 error npm -v 1.2.18
483 error code ELIFECYCLE
484 verbose exit [ 1, true ]
